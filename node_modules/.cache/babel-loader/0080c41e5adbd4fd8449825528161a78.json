{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u0421\\u0435\\u043B\\u0435\\u0437\\u043D\\u0435\\u0432 \\u0421\\u0435\\u0440\\u0433\\u0435\\u0439\\\\Desktop\\\\petproject\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Footer from \"./components/Footer\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const maxResults = 30;\n  const [book, setBook] = useState(\"\");\n  const [isFetching, setIsFetching] = useState(false);\n  const [result, setResult] = useState([]);\n  const [apiKey, setApiKey] = useState(\"AIzaSyBoEqIGK_Gc7hMaEirCfDziPxMqHBpNhN4\");\n  const [totalItems, setTotalItems] = useState(0);\n  const [filter, setFilter] = useState(\"all\");\n  const [sort, setSort] = useState(\"relevance\");\n  const [startIndex, setStartIndex] = useState(0);\n\n  const handleChange = event => {\n    const book = event.target.value;\n    setBook(book);\n  };\n\n  const getBooks = () => {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=intitle:\" + book + (filter != 'all' ? \"+subject:\" + filter : '') + \"&orderBy=\" + sort + \"&key=\" + apiKey + \"&maxResults=\" + maxResults + \"&startIndex=\" + startIndex); //&startIndex=\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setStartIndex(0);\n    setTotalItems(0);\n    setIsFetching(true);\n  }; // useEffect(()=>{\n  //     if (isFetching) {\n  //         getBooks().then((data: any) => {\n  //             setResult(data.data.items);\n  //             setTotalItems(data.data.totalItems);\n  //         })\n  //         setStartIndex(startIndex+maxResults);\n  //         setIsFetching(false);\n  //     }\n  // })\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"cKicg+6rxRuMDx7aV9Q5f50mA48=\");\n\n_c = App;\nexport { App };\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Селезнев Сергей/Desktop/petproject/src/App.tsx"],"names":["useState","axios","Footer","Header","App","maxResults","book","setBook","isFetching","setIsFetching","result","setResult","apiKey","setApiKey","totalItems","setTotalItems","filter","setFilter","sort","setSort","startIndex","setStartIndex","handleChange","event","target","value","getBooks","get","handleSubmit","preventDefault"],"mappings":";;;AAAA,SAAkBA,QAAlB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,UAAU,GAAC,EAAjB;AACA,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAiBP,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM,CAACQ,UAAD,EAAYC,aAAZ,IAA2BT,QAAQ,CAAC,KAAD,CAAzC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,yCAAD,CAApC;AACA,QAAM,CAACc,UAAD,EAAYC,aAAZ,IAA2Bf,QAAQ,CAAC,CAAD,CAAzC;AACA,QAAM,CAACgB,MAAD,EAAQC,SAAR,IAAqBjB,QAAQ,CAAC,KAAD,CAAnC;AACA,QAAM,CAACkB,IAAD,EAAMC,OAAN,IAAiBnB,QAAQ,CAAE,WAAF,CAA/B;AACA,QAAM,CAACoB,UAAD,EAAYC,aAAZ,IAA6BrB,QAAQ,CAAC,CAAD,CAA3C;;AAGA,QAAMsB,YAAY,GAAIC,KAAD,IAAa;AAC9B,UAAMjB,IAAI,GAAGiB,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACAlB,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GAHD;;AAIA,QAAMoB,QAAQ,GAAG,MAAM;AACnB,WAAOzB,KAAK,CAAC0B,GAAN,CAAU,2DAAyDrB,IAAzD,IAA+DU,MAAM,IAAE,KAAR,GAAe,cAAYA,MAA3B,GAAmC,EAAlG,IAAsG,WAAtG,GAAkHE,IAAlH,GAAuH,OAAvH,GAA+HN,MAA/H,GAAsI,cAAtI,GAAqJP,UAArJ,GAAgK,cAAhK,GAA+Ke,UAAzL,CAAP,CADmB,CACwL;AAC9M,GAFD;;AAGA,QAAMQ,YAAY,GAAIL,KAAD,IAAa;AAC9BA,IAAAA,KAAK,CAACM,cAAN;AACAR,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAN,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAN,IAAAA,aAAa,CAAC,IAAD,CAAb;AAEH,GAND,CAnBwB,CA0BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eA2GI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA3GJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+GH,CApJD;;GAAML,G;;KAAAA,G;AAsJN,SAAQA,GAAR","sourcesContent":["import {useEffect,useState,useRef} from \"react\";\r\nimport axios from \"axios\";\r\nimport {Row,Container,Col,Card,Button, InputGroup,FormControl,Form,FormText} from 'react-bootstrap'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Footer from \"./components/Footer\";\r\nimport Header from \"./components/Header\";\r\n\r\nconst App: React.FC = () => {\r\n    const maxResults=30;\r\n    const [book,setBook] = useState(\"\");\r\n    const [isFetching,setIsFetching]=useState(false);\r\n    const [result, setResult] = useState([])\r\n    const [apiKey, setApiKey] = useState(\"AIzaSyBoEqIGK_Gc7hMaEirCfDziPxMqHBpNhN4\")\r\n    const [totalItems,setTotalItems]=useState(0);\r\n    const [filter,setFilter] = useState(\"all\");\r\n    const [sort,setSort] = useState (\"relevance\");\r\n    const [startIndex,setStartIndex] = useState(0);\r\n\r\n\r\n    const handleChange = (event:any)=>{\r\n        const book = event.target.value;\r\n        setBook(book);\r\n    }\r\n    const getBooks = () => {\r\n        return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=intitle:\"+book+(filter!='all'?(\"+subject:\"+filter):'')+\"&orderBy=\"+sort+\"&key=\"+apiKey+\"&maxResults=\"+maxResults+\"&startIndex=\"+startIndex)//&startIndex=\r\n    }\r\n    const handleSubmit = (event:any)=>{\r\n        event.preventDefault();\r\n        setStartIndex(0);\r\n        setTotalItems(0);\r\n        setIsFetching(true);\r\n\r\n    }\r\n    // useEffect(()=>{\r\n    //     if (isFetching) {\r\n    //         getBooks().then((data: any) => {\r\n    //             setResult(data.data.items);\r\n    //             setTotalItems(data.data.totalItems);\r\n    //         })\r\n    //         setStartIndex(startIndex+maxResults);\r\n    //         setIsFetching(false);\r\n    //     }\r\n    // })\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <Header/>\r\n            {/*<h1 >Поиск книг</h1>*/}\r\n\r\n            {/*<form onSubmit={handleSubmit}>*/}\r\n            {/*    <InputGroup className=\"mb-3\">*/}\r\n            {/*        <FormControl*/}\r\n            {/*            type={\"text\"}*/}\r\n            {/*            onChange={handleChange}*/}\r\n            {/*            placeholder=\"Введите название книги\"*/}\r\n            {/*        />*/}\r\n            {/*        <Button*/}\r\n            {/*            type={\"submit\"}*/}\r\n            {/*            variant=\"light\"*/}\r\n            {/*            id=\"button-addon2\">*/}\r\n            {/*            Поиск*/}\r\n            {/*        </Button>*/}\r\n            {/*    </InputGroup>*/}\r\n\r\n            {/*    <Container fluid >*/}\r\n            {/*        <Row>*/}\r\n            {/*            <Col style={{*/}\r\n            {/*                textAlign: 'right',*/}\r\n            {/*            }}>*/}\r\n            {/*                Категория*/}\r\n            {/*            </Col>*/}\r\n            {/*            <Col >*/}\r\n            {/*                <Form.Select*/}\r\n            {/*                    aria-label=\"Default select example\"*/}\r\n            {/*                    onChange={(event:any)=>{*/}\r\n            {/*                        setFilter(event.target.value)*/}\r\n\r\n            {/*                    }}>*/}\r\n            {/*                    <option value=\"all\">Все</option>*/}\r\n            {/*                    <option value=\"art\">Искусство</option>*/}\r\n            {/*                    <option value=\"biography\">Биография</option>*/}\r\n            {/*                    <option value=\"computers\">Компьютеры</option>*/}\r\n            {/*                    <option value=\"history\">История</option>*/}\r\n            {/*                    <option value=\"medical\">Медицина</option>*/}\r\n            {/*                    <option value=\"poetry\">Поэзия</option>*/}\r\n            {/*                </Form.Select>*/}\r\n            {/*            </Col>*/}\r\n            {/*            <Col style={{*/}\r\n            {/*                textAlign: 'right',*/}\r\n            {/*            }}>*/}\r\n            {/*                Сортировать по*/}\r\n            {/*            </Col>*/}\r\n            {/*            <Col>*/}\r\n            {/*                <Form.Select*/}\r\n            {/*                    aria-label=\"Default select example\"*/}\r\n            {/*                    onChange={(event:any)=>{*/}\r\n            {/*                        setSort(event.target.value)*/}\r\n\r\n            {/*                    }}>*/}\r\n            {/*                    <option value=\"relevance\">Актуальный</option>*/}\r\n            {/*                    <option value=\"newest\">Новейший</option>*/}\r\n            {/*                </Form.Select>*/}\r\n            {/*            </Col>*/}\r\n            {/*        </Row>*/}\r\n            {/*    </Container>*/}\r\n            {/*</form>*/}\r\n            {/*<p/>*/}\r\n\r\n            {/*{ totalItems>0 && <h5 style={{textAlign:\"center\"}} > Общее количество {totalItems}</h5>}*/}\r\n            {/*<p/>*/}\r\n            {/*<Container fluid >*/}\r\n            {/*    <Row className=\"justify-content-md-center g-3\">*/}\r\n            {/*    {result.map((book:any)=>(*/}\r\n            {/*        <Col>*/}\r\n            {/*            <Card style={{ width: '300px', height: \"100%\"}} bg={'Light'} border=\"dark\">*/}\r\n            {/*                <Card.Img height={'230px'} variant=\"top\" src={book.volumeInfo?.imageLinks?.thumbnail} />*/}\r\n            {/*                <Card.Body>*/}\r\n            {/*                    <Card.Text>*/}\r\n            {/*                        <u>{book?.volumeInfo?.categories!=undefined && book?.volumeInfo?.categories[0]}</u>*/}\r\n            {/*                    </Card.Text>*/}\r\n            {/*                    <Card.Title ><p className={'fs-6'}>{book.volumeInfo.title}</p></Card.Title>*/}\r\n            {/*                    <Card.Text>*/}\r\n            {/*                    {book.volumeInfo?.authors?.map((author:any)=>(*/}\r\n            {/*                        <FormText className={'text-sm-center'}>{author}</FormText>*/}\r\n            {/*                    ))}*/}\r\n            {/*                    <br/>*/}\r\n            {/*                    </Card.Text>*/}\r\n            {/*                </Card.Body>*/}\r\n            {/*            </Card>*/}\r\n            {/*        </Col>*/}\r\n            {/*    ))}*/}\r\n            {/*    </Row>*/}\r\n            {/*</Container>*/}\r\n            {/*<br/>*/}\r\n            {/*<Row>*/}\r\n            {/*    {startIndex>0 && startIndex<totalItems &&<Button*/}\r\n            {/*        variant=\"warning\"*/}\r\n            {/*        size=\"lg\"*/}\r\n            {/*        onClick={(event)=>{*/}\r\n            {/*            let copyResult = Object.assign([], result);*/}\r\n            {/*            let copyStartIndex = startIndex+maxResults;*/}\r\n            {/*            setStartIndex(copyStartIndex);*/}\r\n            {/*            getBooks().then((data:any) => {*/}\r\n            {/*                setTotalItems(data.data.totalItems);*/}\r\n            {/*                copyResult=copyResult.concat(data.data.items);*/}\r\n            {/*                setResult(copyResult);*/}\r\n            {/*            })*/}\r\n            {/*        }}*/}\r\n            {/*    >*/}\r\n            {/*        Загрузить еще*/}\r\n            {/*    </Button>}*/}\r\n            {/*</Row>*/}\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {App}"]},"metadata":{},"sourceType":"module"}